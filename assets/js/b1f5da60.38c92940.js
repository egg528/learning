"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6552],{3905:(e,n,r)=>{r.d(n,{Zo:()=>u,kt:()=>g});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=t.createContext({}),s=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},u=function(e){var n=s(e.components);return t.createElement(c.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(r),d=i,g=p["".concat(c,".").concat(d)]||p[d]||m[d]||a;return r?t.createElement(g,o(o({ref:n},u),{},{components:r})):t.createElement(g,o({ref:n},u))}));function g(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=r[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6842:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var t=r(7462),i=(r(7294),r(3905));const a={title:"02. Project Reactor - Cold Sequence\uc640 Hot Sequence",sidebar_position:3,tag:["book","reactive-programming"]},o=void 0,l={unversionedId:"reactive-programming/3",id:"reactive-programming/3",title:"02. Project Reactor - Cold Sequence\uc640 Hot Sequence",description:"1. Cold Sequence\uc640 Hot Sequence",source:"@site/docs/project/reactive-programming/3.md",sourceDirName:"reactive-programming",slug:"/reactive-programming/3",permalink:"/project/reactive-programming/3",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"02. Project Reactor - Cold Sequence\uc640 Hot Sequence",sidebar_position:3,tag:["book","reactive-programming"]},sidebar:"tutorialSidebar",previous:{title:"02. Project Reactor - Reactor\uc640 Marble \ub2e4\uc774\uc5b4\uadf8\ub7a8",permalink:"/project/reactive-programming/2"},next:{title:"02. Project Reactor - Backpressure",permalink:"/project/reactive-programming/4"}},c={},s=[{value:"1. Cold Sequence\uc640 Hot Sequence",id:"1-cold-sequence\uc640-hot-sequence",level:2},{value:"\ucef4\ud4e8\ud130 \uacf5\ud559\uc5d0\uc11c Cold / Hot\uc758 \uc758\ubbf8",id:"\ucef4\ud4e8\ud130-\uacf5\ud559\uc5d0\uc11c-cold--hot\uc758-\uc758\ubbf8",level:3},{value:"Cole Sequence \uc608\uc2dc",id:"cole-sequence-\uc608\uc2dc",level:3},{value:"Hot Sequence \uc608\uc2dc",id:"hot-sequence-\uc608\uc2dc",level:3},{value:"HOT\uc758 2\uac00\uc9c0 \uc758\ubbf8",id:"hot\uc758-2\uac00\uc9c0-\uc758\ubbf8",level:4}],u={toc:s},p="wrapper";function m(e){let{components:n,...r}=e;return(0,i.kt)(p,(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"1-cold-sequence\uc640-hot-sequence"},"1. Cold Sequence\uc640 Hot Sequence"),(0,i.kt)("h3",{id:"\ucef4\ud4e8\ud130-\uacf5\ud559\uc5d0\uc11c-cold--hot\uc758-\uc758\ubbf8"},"\ucef4\ud4e8\ud130 \uacf5\ud559\uc5d0\uc11c Cold / Hot\uc758 \uc758\ubbf8"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Cold: \ubb34\uc5b8\uac00\ub97c \uc0c8\ub85c \uc2dc\uc791\ud55c\ub2e4\ub294 \uc758\ubbf8",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\uc598\uc0ac: Cold Wallet \uc778\ud130\ub137\uacfc \ub2e8\uc808\ub418\uc5b4 \uc788\ub294 \uc554\ud638 \ud654\ud3d0 \uc9c0\uac11"))),(0,i.kt)("li",{parentName:"ul"},"Hot: \ubb34\uc5b8\uac00\ub97c \uc0c8\ub85c \uc2dc\uc791\ud558\uc9c0 \uc54a\ub294\ub2e4\ub294 \uc758\ubbf8",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\uc608\uc2dc: Hot Deploy - \uc11c\ubc84 \uc7ac\uc2dc\uc791 \uc5c6\uc774 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc758 \ubcc0\uacbd \uc0ac\ud56d\uc744 \ubc18\uc601\ud558\ub294 \uae30\ub2a5")))),(0,i.kt)("h3",{id:"cole-sequence-\uc608\uc2dc"},"Cole Sequence \uc608\uc2dc"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@Slf4j\npublic class Example {\n    public static void main(String[] args) throws InterruptedException {\n\n        Flux<String> coldFlux =\n                Flux\n                    .fromIterable(Arrays.asList("KOREA", "JAPAN", "CHINESE"))\n                    .map(String::toLowerCase);\n\n        coldFlux.subscribe(country -> log.info("# Subscriber1: {}", country));\n        System.out.println("----------------------------------------------------------------------");\n\n        Thread.sleep(2000L);\n\n        coldFlux.subscribe(country -> log.info("# Subscriber2: {}", country));\n    }\n}\n\n// 23:07:05.739 [main] INFO - # Subscriber1: korea\n// 23:07:05.740 [main] INFO - # Subscriber1: japan\n// 23:07:05.740 [main] INFO - # Subscriber1: chinese\n// ----------------------------------------------------------------------\n// 23:07:07.746 [main] INFO - # Subscriber2: korea\n// 23:07:07.749 [main] INFO - # Subscriber2: japan\n// 23:07:07.750 [main] INFO - # Subscriber2: chinese\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Subscriber\uac00 \uad6c\ub3c5\ud558\ub294 \uc2dc\uc810\uc774 \ub2ec\ub77c\ub3c4 \uad6c\ub3c5 \ub54c\ub9c8\ub2e4 Publisher\ub294 \ub370\uc774\ud130\ub97c emit\ud558\ub294 \uacfc\uc815\uc744 \ucc98\uc74c\ubd80\ud130 \ub2e4\uc2dc \uc2dc\uc791\ud55c\ub2e4.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class Example {\n    public static void main(String[] args) throws InterruptedException {\n        URI worldTimeUri = UriComponentsBuilder.newInstance().scheme("http")\n                .host("worldtimeapi.org")\n                .port(80)\n                .path("/api/timezone/Asia/Seoul")\n                .build()\n                .encode()\n                .toUri();\n\n        Mono<String> mono = getWorldTime(worldTimeUri);\n        mono.subscribe(dateTime -> log.info("# dateTime 1: {}", dateTime));\n        Thread.sleep(2000);\n        mono.subscribe(dateTime -> log.info("# dateTime 2: {}", dateTime));\n\n        Thread.sleep(2000);\n    }\n\n    private static Mono<String> getWorldTime(URI worldTimeUri) {\n        return WebClient.create()\n                .get()\n                .uri(worldTimeUri)\n                .retrieve()\n                .bodyToMono(String.class)\n                .map(response -> {\n                    DocumentContext jsonContext = JsonPath.parse(response);\n                    String dateTime = jsonContext.read("$.datetime");\n                    return dateTime;\n                });\n    }\n}\n\n// # dateTime 1: 2022-02-21T14:55:06.365269+09:00\n// # dateTime 2: 2022-02-21T14:55:08.265269+09:00\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\uacb0\uacfc\ub97c \ubcf4\uba74 \ucd1d 2\ubc88\uc758 \uad6c\ub3c5\uc774 \ubc1c\uc0dd\ud588\ub2e4."),(0,i.kt)("li",{parentName:"ul"},"\ubc1c\uc0dd \uc2dc\uc810\ub9c8\ub2e4 \ub370\uc774\ud130 emit \uacfc\uc815\uc774 \ucc98\uc74c\ubd80\ud130 \uc0c8\ub85c \uc2dc\uc791\ub418\uc5b4 log\uc5d0 2\ucd08 \uc815\ub3c4\uc758 \ucc28\uc774\uac00 \uc788\ub294 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.")),(0,i.kt)("h3",{id:"hot-sequence-\uc608\uc2dc"},"Hot Sequence \uc608\uc2dc"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class Example {\n    public static void main(String[] args) throws InterruptedException {\n        String[] singers = {"Singer A", "Singer B", "Singer C", "Singer D", "Singer E"};\n\n        log.info("# Begin concert:");\n        Flux<String> concertFlux =\n                Flux\n                    .fromArray(singers)\n                    .delayElements(Duration.ofSeconds(1))\n                    .share();\n\n        concertFlux.subscribe(\n                singer -> log.info("# Subscriber1 is watching {}\'s song", singer)\n        );\n\n        Thread.sleep(2500);\n\n        concertFlux.subscribe(\n                singer -> log.info("# Subscriber2 is watching {}\'s song", singer)\n        );\n\n        Thread.sleep(3000);\n    }\n}\n\n// 23:12:24.717 [parallel-1] INFO - # Subscriber1 is watching Singer A\'s song\n// 23:12:25.722 [parallel-2] INFO - # Subscriber1 is watching Singer B\'s song\n// 23:12:26.729 [parallel-3] INFO - # Subscriber1 is watching Singer C\'s song\n// 23:12:26.729 [parallel-3] INFO - # Subscriber2 is watching Singer C\'s song\n// 23:12:27.733 [parallel-4] INFO - # Subscriber1 is watching Singer D\'s song\n// 23:12:27.733 [parallel-4] INFO - # Subscriber2 is watching Singer D\'s song\n// 23:12:28.738 [parallel-5] INFO - # Subscriber1 is watching Singer E\'s song\n// 23:12:28.739 [parallel-5] INFO - # Subscriber2 is watching Singer E\'s song\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"share() Operator\uc5d0 \uc758\ud574 \uc6d0\ubcf8 Flux\ub97c \uba40\ud2f0\uce90\uc2a4\ud2b8\ud55c\ub2e4. ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"\uc911\uc694: \ub9cc\uc57d Subscriber1\uc774 \uad6c\ub3c5\uc744 \uc885\ub8cc\ud55c \uc774\ud6c4 Subscriber2\uac00 \uad6c\ub3c5\uc744 \uc2dc\uc791\ud55c\ub2e4\uba74 Subscriber2\ub294 \ucc98\uc74c\ubd80\ud130 \ub370\uc774\ud130\ub97c \uad6c\ub3c5\ud558\uac8c \ub428")))),(0,i.kt)("li",{parentName:"ul"},"\uc989, \uc5ec\ub7ec Subscriber\uac00 \ud558\ub098\uc758 \uc6d0\ubcf8 Flux\ub97c \uacf5\uc720\ud558\uac8c \ub41c\ub2e4."),(0,i.kt)("li",{parentName:"ul"},"\uacb0\uacfc\ub97c \ubcf4\uba74 Subscriber2\ub294 Singer A, Singer B \ub370\uc774\ud130\ub97c \uc804\ub2ec\ubc1b\uc9c0 \ubabb\ud55c \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4."),(0,i.kt)("li",{parentName:"ul"},"\ub85c\uadf8\ub97c \ubcf4\uba74 thread \uba85\uc774 \ub0a8\uc740 \uac78 \ud655\uc778\ud560 \uc218 \uc788\ub294\ub370 \uc774\ub294 delayElements() Operator\uc758 default thread scheduler\uac00 parallel\uc774\uae30 \ub54c\ubb38\uc774\ub2e4.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Scheduler\ub294 10\uc7a5\uc5d0\uc11c...")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@Slf4j\npublic class Example {\n    public static void main(String[] args) throws InterruptedException {\n        URI worldTimeUri = UriComponentsBuilder.newInstance().scheme("http")\n                .host("worldtimeapi.org")\n                .port(80)\n                .path("/api/timezone/Asia/Seoul")\n                .build()\n                .encode()\n                .toUri();\n\n        Mono<String> mono = getWorldTime(worldTimeUri).cache();\n        mono.subscribe(dateTime -> log.info("# dateTime 1: {}", dateTime));\n        Thread.sleep(2000);\n        mono.subscribe(dateTime -> log.info("# dateTime 2: {}", dateTime));\n\n        Thread.sleep(2000);\n    }\n\n    private static Mono<String> getWorldTime(URI worldTimeUri) {\n        return WebClient.create()\n                .get()\n                .uri(worldTimeUri)\n                .retrieve()\n                .bodyToMono(String.class)\n                .map(response -> {\n                    DocumentContext jsonContext = JsonPath.parse(response);\n                    String dateTime = jsonContext.read("$.datetime");\n                    return dateTime;\n                });\n    }\n}\n\n// # dateTime 1: 2022-02-21T14:55:06.365269+09:00\n// # dateTime 2: 2022-02-21T14:55:06.365269+09:00\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"cache() Operator\ub294 Cold Sequence\ub85c \ub3d9\uc791\ud558\ub294 Mono\ub97c Hot Sequence\ub85c  \ubcc0\uacbd\ud55c\ub2e4."),(0,i.kt)("li",{parentName:"ul"},"emit\ub41c \ub370\uc774\ud130\ub97c \uce90\uc2dc\ud574 \uad6c\ub3c5\uc774 \ubc1c\uc0dd\ud560 \ub54c\ub9c8\ub2e4 \uce90\uc2dc\ub41c \uac12\uc744 \uc804\ub2ec\ud55c\ub2e4."),(0,i.kt)("li",{parentName:"ul"},"Hot Sequence\uc758 \uccab \uc608\uc2dc\uc640 \uc0c1\ud669\uc774 \ub3d9\uc77c\ud558\uc9c0\ub294 \uc54a\uc740 \uac83 \uac19\ub2e4.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\ub2e8, \uad6c\ub3c5\uc774 \ubc1c\uc0dd\ud588\uc744 \ub54c \ub370\uc774\ud130 emit\uc744 \ub2e4\uc2dc \ud558\uc9c0 \uc54a\ub294\ub2e4(Cache\uac12 \ud65c\uc6a9)\ub294 \uc810\uc5d0\uc11c \ub3d9\uc77c\ud558\uac8c Hot Sequence\uc774\ub2e4")))),(0,i.kt)("h4",{id:"hot\uc758-2\uac00\uc9c0-\uc758\ubbf8"},"HOT\uc758 2\uac00\uc9c0 \uc758\ubbf8"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\ucd5c\ucd08 \uad6c\ub3c5\uc774 \ubc1c\uc0dd\ud558\uae30 \uc804\uae4c\uc9c0\ub294 \ub370\uc774\ud130\uc758 emit\uc774 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub294 \uac83 (Warm up)"),(0,i.kt)("li",{parentName:"ol"},"\uad6c\ub3c5 \uc5ec\ubd80\uc640 \uc0c1\uad00 \uc5c6\uc774 \ub370\uc774\ud130\uac00 emit\ub418\ub294 \uac83")))}m.isMDXComponent=!0}}]);