"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4998],{3905:(e,n,t)=>{t.d(n,{Zo:()=>o,kt:()=>S});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),c=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},o=function(e){var n=c(e.components);return r.createElement(u.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),p=c(t),k=i,S=p["".concat(u,".").concat(k)]||p[k]||m[k]||a;return t?r.createElement(S,l(l({ref:n},o),{},{components:t})):r.createElement(S,l({ref:n},o))}));function S(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=k;var s={};for(var u in n)hasOwnProperty.call(n,u)&&(s[u]=n[u]);s.originalType=e,s[p]="string"==typeof e?e:i,l[1]=s;for(var c=2;c<a;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},8266:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=t(7462),i=(t(7294),t(3905));const a={title:"02. Project Reactor - Sinks",sidebar_position:5,tag:["book","reactive-programming"]},l=void 0,s={unversionedId:"reactive-programming/5",id:"reactive-programming/5",title:"02. Project Reactor - Sinks",description:"1. Sinks\ub780?",source:"@site/docs/project/reactive-programming/5.md",sourceDirName:"reactive-programming",slug:"/reactive-programming/5",permalink:"/project/reactive-programming/5",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"02. Project Reactor - Sinks",sidebar_position:5,tag:["book","reactive-programming"]},sidebar:"tutorialSidebar",previous:{title:"02. Project Reactor - Backpressure",permalink:"/project/reactive-programming/4"},next:{title:"02. Project Reactor - Secheduler",permalink:"/project/reactive-programming/6"}},u={},c=[{value:"1. Sinks\ub780?",id:"1-sinks\ub780",level:2},{value:"2. Sink\uc758 \uc885\ub958",id:"2-sink\uc758-\uc885\ub958",level:2},{value:"(1) Sinks.One",id:"1-sinksone",level:3},{value:"FAIL_FAST\ub780?",id:"fail_fast\ub780",level:4},{value:"(2) Sinks.Many",id:"2-sinksmany",level:3},{value:"(1) UnicastSpec",id:"1-unicastspec",level:4},{value:"(2) MulticastSpec",id:"2-multicastspec",level:4},{value:"(3) MulticastReplaySpec",id:"3-multicastreplayspec",level:4}],o={toc:c},p="wrapper";function m(e){let{components:n,...t}=e;return(0,i.kt)(p,(0,r.Z)({},o,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"1-sinks\ub780"},"1. Sinks\ub780?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\ub9ac\uc561\ud2f0\ube0c \uc2a4\ud2b8\ub9bc\uc988\uc758 \uad6c\uc131 \uc694\uc18c \uc911 \ud558\ub098\uc778 Processor\uc758 \uac1c\uc120\ub41c \ubc84\uc804."),(0,i.kt)("li",{parentName:"ul"},"Signal\uc744 \ud504\ub85c\uadf8\ub798\ubc0d \ubc29\uc2dd\uc73c\ub85c \ud478\uc2dc\ud560 \uc218 \uc788\ub294 \uad6c\uc870\uc774\uba70 Flux, Mono\uc758 \uc758\ubbf8 \uccb4\uacc4\ub97c \uac00\uc9c4\ub2e4."),(0,i.kt)("li",{parentName:"ul"},"Processor\uc640 \ub2e4\ub978 \uc810\uc740 \uc2a4\ub808\ub4dc \uc548\uc815\uc131\uc744 \ubcf4\uc7a5\ud558\uae30 \ub54c\ubb38\uc5d0 \uba40\ud2f0\uc2a4\ub808\ub4dc \ubc29\uc2dd\uc73c\ub85c Signal\uc744 \uc804\uc1a1\ud574\ub3c4 \ubb38\uc81c\uac00 \uc5c6\ub2e4",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Processor\ub294 \uc2f1\uae00 \uc2a4\ub808\ub4dc \uae30\ubc18")))),(0,i.kt)("h2",{id:"2-sink\uc758-\uc885\ub958"},"2. Sink\uc758 \uc885\ub958"),(0,i.kt)("h3",{id:"1-sinksone"},"(1) Sinks.One"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"1\uac74\uc758 \ub370\uc774\ud130\ub97c \uc804\uc1a1\ud558\ub294 \ubc29\ubc95\uc744 \uc815\uc758\ud574 \ub454 \uae30\ub2a5 \uba85\uc138")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'    public static void main(String[] args) throws InterruptedException {\n\n        Sinks.One<String> sinkOne = Sinks.one();\n        Mono<String> mono = sinkOne.asMono(); // asMono() \uba54\uc11c\ub4dc\ub97c \ud1b5\ud574 Sinks.One -> Mono\n\n        // param: emit value, emit \uc2e4\ud328 \uc2dc \ud578\ub4e4\ub9c1 \uc804\ub7b5\n        sinkOne.emitValue("Hello Reactor", Sinks.EmitFailureHandler.FAIL_FAST);\n        // \n\n        mono.subscribe(data -> System.out.println(data));\n        mono.subscribe(data -> System.out.println(data));\n    }\n    \n// Hello Reactor\n// Hello Reactor\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\uc5ec\ub7ec \uac74\uc758 \ub370\uc774\ud130\ub97c \uc5ec\ub7ec \uac00\uc9c0 \ubc29\uc2dd\uc73c\ub85c \uc804\uc1a1\ud558\ub294 \uae30\ub2a5\uc744 \uc815\uc758\ud574 \ub454 \uae30\ub2a5 \uba85\uc138"),(0,i.kt)("li",{parentName:"ul"},"Sinks.one() \uba54\uc11c\ub4dc \ud638\ucd9c\uc740 \ud55c \uac74\uc758 \ub370\uc774\ud130\ub97c emit\ud558\ub294 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\ub824\ub294 \uac83\uc774\ub77c \uc774\ud574\ud560 \uc218 \uc788\uc74c")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'    public static void main(String[] args) throws InterruptedException {\n\n        Sinks.One<String> sinkOne = Sinks.one();\n        Mono<String> mono = sinkOne.asMono();\n\n        // param: emit value, emit \uc2e4\ud328 \uc2dc \ud578\ub4e4\ub9c1 \uc804\ub7b5\n        sinkOne.emitValue("Hello Reactor", Sinks.EmitFailureHandler.FAIL_FAST);\n        sinkOne.emitValue("Hi Reactor", Sinks.EmitFailureHandler.FAIL_FAST);\n\n        mono.subscribe(data -> System.out.println(data));\n        mono.subscribe(data -> System.out.println(data));\n    }\n    \n// Hello Reactor\n// Hello Reactor\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\uc704\uc640 \uac19\uc774 emitValue\ub97c 2\ubc88 \uc0ac\uc6a9\ud574\ub3c4 \ucc98\uc74c emit\ud55c \ub370\uc774\ud130\ub9cc \uc815\uc0c1 \ub3d9\uc791\ud558\uace0 \ub098\uba38\uc9c0\ub294 Drop\ub41c\ub2e4")),(0,i.kt)("h4",{id:"fail_fast\ub780"},"FAIL_FAST\ub780?"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"    public interface EmitFailureHandler {\n        EmitFailureHandler FAIL_FAST = (signalType, emission) -> {\n            return false;\n        };\n    }\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"lamda \ud45c\ud604\uc2dd\uc73c\ub85c \uad6c\uc131\ub41c EmitFailureHandler \uc778\ud130\ud398\uc774\uc2a4\uc758 \uad6c\ud604 \uac1d\uccb4"),(0,i.kt)("li",{parentName:"ul"},"emit \ub3c4\uc911\uc5d0 \ubc1c\uc0dd\ud55c \uc624\ub958\uc5d0 \ub300\ud574 \ube60\ub974\uac8c \uc2e4\ud328 \ucc98\ub9ac\ub97c \ud558\uc5ec \uc2a4\ub808\ub4dc \uac04\uc758 \uacbd\ud569, \uad50\ucc29 \uc0c1\ud0dc\ub97c \ubc29\uc9c0\ud55c\ub2e4")),(0,i.kt)("h3",{id:"2-sinksmany"},"(2) Sinks.Many"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\uc5ec\ub7ec \uac74\uc758 \ub370\uc774\ud130\ub97c \uc5ec\ub7ec \uac00\uc9c0 \ubc29\ubc95\uc73c\ub85c \uc804\uc1a1\ud558\ub294 \uae30\ub2a5\uc744 \uc815\uc758\ud574 \ub454 \uae30\ub2a5 \uba85\uc138")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public interface ManySpec {\n    UnicastSpec unicast();\n    MulticastSpec multicast();\n    MulticastReplaySpec replay();\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Sinks.many() \uba54\uc11c\ub4dc\ub294 ManySpec\uc744 \ubc18\ud658\ud558\ub294\ub370 ManySpec\uc740 3\uac00\uc9c0\uc758 3\uac00\uc9c0 \ubcc4\ub3c4\uc758 Spec\uc744 \uc81c\uacf5\ud55c\ub2e4.")),(0,i.kt)("h4",{id:"1-unicastspec"},"(1) UnicastSpec"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"    public static void main(String[] args) throws InterruptedException {\n\n        Sinks.Many<Integer> unicastSink = Sinks.many().unicast().onBackpressureBuffer();\n\n        Flux<Integer> fluxView = unicastSink.asFlux();\n\n        unicastSink.emitNext(1, Sinks.EmitFailureHandler.FAIL_FAST);\n        unicastSink.emitNext(2, Sinks.EmitFailureHandler.FAIL_FAST);\n        unicastSink.emitNext(3, Sinks.EmitFailureHandler.FAIL_FAST);\n\n        fluxView.subscribe(data -> System.out.println(data));\n\n        unicastSink.emitNext(4, Sinks.EmitFailureHandler.FAIL_FAST);\n    }\n    \n// 1\n// 2\n// 3\n// 4\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\ud558\ub098\uc758 \ud2b9\uc815 \uc2dc\uc2a4\ud15c\ub9cc \ub370\uc774\ud130\ub97c \uc804\ub2ec \ubc1b\ub294 \ubc29\uc2dd\uc774\ub2e4. (One to One)"),(0,i.kt)("li",{parentName:"ul"},"\ub9cc\uc57d fluxView.subscribe()\ub97c 2\ubc88 \uc2e4\ud589\ud558\uba74 \uc544\ub798\uc640 \uac19\uc740 \uc624\ub958\ub97c \ubc18\ud658\ud55c\ub2e4.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"java.lang.IllegalStateException: Sinks.many().unicast() sinks only allow a single Subscriber")))),(0,i.kt)("h4",{id:"2-multicastspec"},"(2) MulticastSpec"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'    public static void main(String[] args) throws InterruptedException {\n\n        Sinks.Many<Integer> multicastSink = Sinks.many().multicast().onBackpressureBuffer();\n\n        Flux<Integer> fluxView = multicastSink.asFlux();\n\n        multicastSink.emitNext(1, Sinks.EmitFailureHandler.FAIL_FAST);\n        multicastSink.emitNext(2, Sinks.EmitFailureHandler.FAIL_FAST);\n        multicastSink.emitNext(3, Sinks.EmitFailureHandler.FAIL_FAST);\n\n        fluxView.subscribe(data -> System.out.println("Subscriber 1: "+data));\n        fluxView.subscribe(data -> System.out.println("Subscriber 2: "+data));\n\n        multicastSink.emitNext(4, Sinks.EmitFailureHandler.FAIL_FAST);\n\n        fluxView.subscribe(data -> System.out.println(data));\n    }\n    \n// Subscriber 1: 1\n// Subscriber 1: 2\n// Subscriber 1: 3\n// Subscriber 1: 4\n// Subscriber 2: 4\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\ud558\ub098 \uc774\uc0c1\uc758 \uc77c\ubd80 \uc2dc\uc2a4\ud15c\ub4e4\ub9cc \uc815\ubcf4\ub97c \uc804\ub2ec\ubc1b\ub294 \ubc29\uc2dd"),(0,i.kt)("li",{parentName:"ul"},"\uc989, \ud558\ub098 \uc774\uc0c1\uc758 Subscriber\uc5d0\uac8c \ub370\uc774\ud130\ub97c emit\ud560 \uc218 \uc788\ub2e4"),(0,i.kt)("li",{parentName:"ul"},"Sinks\uac00 Publisher\ub85c \ub3d9\uc791\ud558\uba74 \uae30\ubcf8\uc801\uc73c\ub85c Hot Publisher\ub85c \ub3d9\uc791\ud55c\ub2e4."),(0,i.kt)("li",{parentName:"ul"},"onBackpressureBuffer() \uba54\uc11c\ub4dc\ub294 Warm up \ud2b9\uc9d5\uc744 \uac00\uc9c0\ub294 Hot Sequence\ub85c \uad6c\ub3c5\uc774 \ubc1c\uc0dd\ud55c \uc2dc\uc810\uc5d0 emit\uc774 \uc2dc\uc791\ub41c\ub2e4."),(0,i.kt)("li",{parentName:"ul"},"\ub54c\ubb38\uc5d0 Subscriber 2\ub294 \ub370\uc774\ud130 4\ub9cc \uad6c\ub3c5\ud558\uac8c \ub41c\ub2e4.")),(0,i.kt)("h4",{id:"3-multicastreplayspec"},"(3) MulticastReplaySpec"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'    public static void main(String[] args) throws InterruptedException {\n\n        Sinks.Many<Integer> replaySink = Sinks.many().replay().limit(3);\n\n        Flux<Integer> fluxView = replaySink.asFlux();\n\n        replaySink.emitNext(1, Sinks.EmitFailureHandler.FAIL_FAST);\n        replaySink.emitNext(2, Sinks.EmitFailureHandler.FAIL_FAST);\n        replaySink.emitNext(3, Sinks.EmitFailureHandler.FAIL_FAST);\n\n        fluxView.subscribe(data -> System.out.println("Subscriber 1: "+data));\n\n        fluxView.subscribe(data -> System.out.println("Subscriber 2: "+data));\n\n        replaySink.emitNext(4, Sinks.EmitFailureHandler.FAIL_FAST);\n    }\n    \n// Subscriber 1: 1\n// Subscriber 1: 2\n// Subscriber 1: 3\n// Subscriber 2: 1\n// Subscriber 2: 2\n// Subscriber 2: 3\n// Subscriber 1: 4\n// Subscriber 2: 4\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\uc774\ubbf8 emit\ub41c \ub370\uc774\ud130\ub4e4\uc744 \uc0c8\ub85c\uc6b4 Subscriber\ub4e4\uc5d0\uac8c \ub2e4\uc2dc \uc81c\uacf5\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\uc744 \uc81c\uacf5\ud55c\ub2e4."),(0,i.kt)("li",{parentName:"ul"},"limit() \uba54\uc11c\ub4dc\ub97c \uc774\uc6a9\ud558\uba74 Subscriber\ub4e4\uc758 \uad6c\ub3c5 \uc2dc\uc810\uc5d0\uc11c \ucd5c\uadfc emit\ub41c n\uac1c \ub9cc\ud07c\uc758 \ub370\uc774\ud130\ub97c \ub2e4\uc2dc \uc81c\uacf5\ud55c\ub2e4.")))}m.isMDXComponent=!0}}]);